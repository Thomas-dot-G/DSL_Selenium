/*
 * generated by Xtext 2.9.1
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBrowser_Task
entryRuleBrowser_Task
:
{ before(grammarAccess.getBrowser_TaskRule()); }
	 ruleBrowser_Task
{ after(grammarAccess.getBrowser_TaskRule()); } 
	 EOF 
;

// Rule Browser_Task
ruleBrowser_Task 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBrowser_TaskAccess().getGroup()); }
		(rule__Browser_Task__Group__0)
		{ after(grammarAccess.getBrowser_TaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClick
entryRuleClick
:
{ before(grammarAccess.getClickRule()); }
	 ruleClick
{ after(grammarAccess.getClickRule()); } 
	 EOF 
;

// Rule Click
ruleClick 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClickAccess().getGroup()); }
		(rule__Click__Group__0)
		{ after(grammarAccess.getClickAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGo
entryRuleGo
:
{ before(grammarAccess.getGoRule()); }
	 ruleGo
{ after(grammarAccess.getGoRule()); } 
	 EOF 
;

// Rule Go
ruleGo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoAccess().getGroup()); }
		(rule__Go__Group__0)
		{ after(grammarAccess.getGoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFill
entryRuleFill
:
{ before(grammarAccess.getFillRule()); }
	 ruleFill
{ after(grammarAccess.getFillRule()); } 
	 EOF 
;

// Rule Fill
ruleFill 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFillAccess().getGroup()); }
		(rule__Fill__Group__0)
		{ after(grammarAccess.getFillAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelect
entryRuleSelect
:
{ before(grammarAccess.getSelectRule()); }
	 ruleSelect
{ after(grammarAccess.getSelectRule()); } 
	 EOF 
;

// Rule Select
ruleSelect 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectAccess().getGroup()); }
		(rule__Select__Group__0)
		{ after(grammarAccess.getSelectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerify
entryRuleVerify
:
{ before(grammarAccess.getVerifyRule()); }
	 ruleVerify
{ after(grammarAccess.getVerifyRule()); } 
	 EOF 
;

// Rule Verify
ruleVerify 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerifyAccess().getGroup()); }
		(rule__Verify__Group__0)
		{ after(grammarAccess.getVerifyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleApply_All
entryRuleApply_All
:
{ before(grammarAccess.getApply_AllRule()); }
	 ruleApply_All
{ after(grammarAccess.getApply_AllRule()); } 
	 EOF 
;

// Rule Apply_All
ruleApply_All 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getApply_AllAccess().getGroup()); }
		(rule__Apply_All__Group__0)
		{ after(grammarAccess.getApply_AllAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIf
entryRuleIf
:
{ before(grammarAccess.getIfRule()); }
	 ruleIf
{ after(grammarAccess.getIfRule()); } 
	 EOF 
;

// Rule If
ruleIf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfAccess().getGroup()); }
		(rule__If__Group__0)
		{ after(grammarAccess.getIfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStore
entryRuleStore
:
{ before(grammarAccess.getStoreRule()); }
	 ruleStore
{ after(grammarAccess.getStoreRule()); } 
	 EOF 
;

// Rule Store
ruleStore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoreAccess().getGroup()); }
		(rule__Store__Group__0)
		{ after(grammarAccess.getStoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallFunction
entryRuleCallFunction
:
{ before(grammarAccess.getCallFunctionRule()); }
	 ruleCallFunction
{ after(grammarAccess.getCallFunctionRule()); } 
	 EOF 
;

// Rule CallFunction
ruleCallFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallFunctionAccess().getGroup()); }
		(rule__CallFunction__Group__0)
		{ after(grammarAccess.getCallFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringType
entryRuleStringType
:
{ before(grammarAccess.getStringTypeRule()); }
	 ruleStringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule StringType
ruleStringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTypeAccess().getAlternatives()); }
		(rule__StringType__Alternatives)
		{ after(grammarAccess.getStringTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFuncVar
entryRuleFuncVar
:
{ before(grammarAccess.getFuncVarRule()); }
	 ruleFuncVar
{ after(grammarAccess.getFuncVarRule()); } 
	 EOF 
;

// Rule FuncVar
ruleFuncVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFuncVarAccess().getGroup()); }
		(rule__FuncVar__Group__0)
		{ after(grammarAccess.getFuncVarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoop
entryRuleLoop
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopAccess().getAlternatives()); }
		(rule__Loop__Alternatives)
		{ after(grammarAccess.getLoopAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForLoop
entryRuleForLoop
:
{ before(grammarAccess.getForLoopRule()); }
	 ruleForLoop
{ after(grammarAccess.getForLoopRule()); } 
	 EOF 
;

// Rule ForLoop
ruleForLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForLoopAccess().getGroup()); }
		(rule__ForLoop__Group__0)
		{ after(grammarAccess.getForLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
		(rule__WhileLoop__Group__0)
		{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoLoop
entryRuleDoLoop
:
{ before(grammarAccess.getDoLoopRule()); }
	 ruleDoLoop
{ after(grammarAccess.getDoLoopRule()); } 
	 EOF 
;

// Rule DoLoop
ruleDoLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoLoopAccess().getGroup()); }
		(rule__DoLoop__Group__0)
		{ after(grammarAccess.getDoLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddCondition
entryRuleAddCondition
:
{ before(grammarAccess.getAddConditionRule()); }
	 ruleAddCondition
{ after(grammarAccess.getAddConditionRule()); } 
	 EOF 
;

// Rule AddCondition
ruleAddCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddConditionAccess().getGroup()); }
		(rule__AddCondition__Group__0)
		{ after(grammarAccess.getAddConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElements
entryRuleElements
:
{ before(grammarAccess.getElementsRule()); }
	 ruleElements
{ after(grammarAccess.getElementsRule()); } 
	 EOF 
;

// Rule Elements
ruleElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementsAccess().getGroup()); }
		(rule__Elements__Group__0)
		{ after(grammarAccess.getElementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEltType
entryRuleEltType
:
{ before(grammarAccess.getEltTypeRule()); }
	 ruleEltType
{ after(grammarAccess.getEltTypeRule()); } 
	 EOF 
;

// Rule EltType
ruleEltType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEltTypeAccess().getAlternatives()); }
		(rule__EltType__Alternatives)
		{ after(grammarAccess.getEltTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTag
entryRuleTag
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTagAccess().getGroup()); }
		(rule__Tag__Group__0)
		{ after(grammarAccess.getTagAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleOp
entryRuleSimpleOp
:
{ before(grammarAccess.getSimpleOpRule()); }
	 ruleSimpleOp
{ after(grammarAccess.getSimpleOpRule()); } 
	 EOF 
;

// Rule SimpleOp
ruleSimpleOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleOpAccess().getGroup()); }
		(rule__SimpleOp__Group__0)
		{ after(grammarAccess.getSimpleOpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparableElt
entryRuleComparableElt
:
{ before(grammarAccess.getComparableEltRule()); }
	 ruleComparableElt
{ after(grammarAccess.getComparableEltRule()); } 
	 EOF 
;

// Rule ComparableElt
ruleComparableElt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparableEltAccess().getAlternatives()); }
		(rule__ComparableElt__Alternatives)
		{ after(grammarAccess.getComparableEltAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getAlternatives()); }
		(rule__Text__Alternatives)
		{ after(grammarAccess.getTextAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getActionParserRuleCall_0()); }
		ruleAction
		{ after(grammarAccess.getOperationAccess().getActionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getLoopParserRuleCall_1()); }
		ruleLoop
		{ after(grammarAccess.getOperationAccess().getLoopParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getApply_AllParserRuleCall_2()); }
		ruleApply_All
		{ after(grammarAccess.getOperationAccess().getApply_AllParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getIfParserRuleCall_3()); }
		ruleIf
		{ after(grammarAccess.getOperationAccess().getIfParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getStoreParserRuleCall_4()); }
		ruleStore
		{ after(grammarAccess.getOperationAccess().getStoreParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getCallFunctionParserRuleCall_5()); }
		ruleCallFunction
		{ after(grammarAccess.getOperationAccess().getCallFunctionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getClickParserRuleCall_0()); }
		ruleClick
		{ after(grammarAccess.getActionAccess().getClickParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getGoParserRuleCall_1()); }
		ruleGo
		{ after(grammarAccess.getActionAccess().getGoParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getFillParserRuleCall_2()); }
		ruleFill
		{ after(grammarAccess.getActionAccess().getFillParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getSelectParserRuleCall_3()); }
		ruleSelect
		{ after(grammarAccess.getActionAccess().getSelectParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getVerifyParserRuleCall_4()); }
		ruleVerify
		{ after(grammarAccess.getActionAccess().getVerifyParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTextAssignment_0()); }
		(rule__Type__TextAssignment_0)
		{ after(grammarAccess.getTypeAccess().getTextAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEltsAssignment_1()); }
		(rule__Type__EltsAssignment_1)
		{ after(grammarAccess.getTypeAccess().getEltsAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEltAssignment_2()); }
		(rule__Type__EltAssignment_2)
		{ after(grammarAccess.getTypeAccess().getEltAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getCondAssignment_3()); }
		(rule__Type__CondAssignment_3)
		{ after(grammarAccess.getTypeAccess().getCondAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTypeAccess().getTextAssignment_0()); }
		(rule__StringType__TextAssignment_0)
		{ after(grammarAccess.getStringTypeAccess().getTextAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringTypeAccess().getEltsAssignment_1()); }
		(rule__StringType__EltsAssignment_1)
		{ after(grammarAccess.getStringTypeAccess().getEltsAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStringTypeAccess().getEltAssignment_2()); }
		(rule__StringType__EltAssignment_2)
		{ after(grammarAccess.getStringTypeAccess().getEltAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStringTypeAccess().getCondAssignment_3()); }
		(rule__StringType__CondAssignment_3)
		{ after(grammarAccess.getStringTypeAccess().getCondAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getForLoopParserRuleCall_0()); }
		ruleForLoop
		{ after(grammarAccess.getLoopAccess().getForLoopParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoopAccess().getWhileLoopParserRuleCall_1()); }
		ruleWhileLoop
		{ after(grammarAccess.getLoopAccess().getWhileLoopParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLoopAccess().getDoLoopParserRuleCall_2()); }
		ruleDoLoop
		{ after(grammarAccess.getLoopAccess().getDoLoopParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getSimpleOpParserRuleCall_1_0()); }
		ruleSimpleOp
		{ after(grammarAccess.getConditionAccess().getSimpleOpParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getVerifyParserRuleCall_1_1()); }
		ruleVerify
		{ after(grammarAccess.getConditionAccess().getVerifyParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getConditionAccess().getVariableParserRuleCall_1_2()); }
		ruleVariable
		{ after(grammarAccess.getConditionAccess().getVariableParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCondition__OpAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddConditionAccess().getOpAndKeyword_0_0_0()); }
		'And'
		{ after(grammarAccess.getAddConditionAccess().getOpAndKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddConditionAccess().getOpOrKeyword_0_0_1()); }
		'Or'
		{ after(grammarAccess.getAddConditionAccess().getOpOrKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EltType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEltTypeAccess().getTagParserRuleCall_0()); }
		ruleTag
		{ after(grammarAccess.getEltTypeAccess().getTagParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEltTypeAccess().getURLKeyword_1()); }
		'URL'
		{ after(grammarAccess.getEltTypeAccess().getURLKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getEltTypeAccess().getVariableParserRuleCall_2()); }
		ruleVariable
		{ after(grammarAccess.getEltTypeAccess().getVariableParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparableElt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparableEltAccess().getInteAssignment_0()); }
		(rule__ComparableElt__InteAssignment_0)
		{ after(grammarAccess.getComparableEltAccess().getInteAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparableEltAccess().getTextAssignment_1()); }
		(rule__ComparableElt__TextAssignment_1)
		{ after(grammarAccess.getComparableEltAccess().getTextAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getVariAssignment_0()); }
		(rule__Text__VariAssignment_0)
		{ after(grammarAccess.getTextAccess().getVariAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getNameAssignment_1()); }
		(rule__Text__NameAssignment_1)
		{ after(grammarAccess.getTextAccess().getNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getFuncAssignment_0()); }
	(rule__Program__FuncAssignment_0)*
	{ after(grammarAccess.getProgramAccess().getFuncAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getBAssignment_1()); }
	(rule__Program__BAssignment_1)
	{ after(grammarAccess.getProgramAccess().getBAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Browser_Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Browser_Task__Group__0__Impl
	rule__Browser_Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowser_TaskAccess().getSeleniumKeyword_0()); }
	'Selenium'
	{ after(grammarAccess.getBrowser_TaskAccess().getSeleniumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Browser_Task__Group__1__Impl
	rule__Browser_Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowser_TaskAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBrowser_TaskAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Browser_Task__Group__2__Impl
	rule__Browser_Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowser_TaskAccess().getBrowserKeyword_2()); }
	'Browser'
	{ after(grammarAccess.getBrowser_TaskAccess().getBrowserKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Browser_Task__Group__3__Impl
	rule__Browser_Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowser_TaskAccess().getNameAssignment_3()); }
	(rule__Browser_Task__NameAssignment_3)
	{ after(grammarAccess.getBrowser_TaskAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Browser_Task__Group__4__Impl
	rule__Browser_Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowser_TaskAccess().getOperationsAssignment_4()); }
	(rule__Browser_Task__OperationsAssignment_4)*
	{ after(grammarAccess.getBrowser_TaskAccess().getOperationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Browser_Task__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowser_TaskAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getBrowser_TaskAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Click__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__0__Impl
	rule__Click__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getClickKeyword_0()); }
	'Click'
	{ after(grammarAccess.getClickAccess().getClickKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getEltAssignment_1()); }
	(rule__Click__EltAssignment_1)
	{ after(grammarAccess.getClickAccess().getEltAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Go__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Go__Group__0__Impl
	rule__Go__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoAccess().getGoKeyword_0()); }
	'Go'
	{ after(grammarAccess.getGoAccess().getGoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Go__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoAccess().getLinkAssignment_1()); }
	(rule__Go__LinkAssignment_1)
	{ after(grammarAccess.getGoAccess().getLinkAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fill__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fill__Group__0__Impl
	rule__Fill__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillAccess().getFillKeyword_0()); }
	'Fill'
	{ after(grammarAccess.getFillAccess().getFillKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fill__Group__1__Impl
	rule__Fill__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFillAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fill__Group__2__Impl
	rule__Fill__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillAccess().getEltAssignment_2()); }
	(rule__Fill__EltAssignment_2)
	{ after(grammarAccess.getFillAccess().getEltAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fill__Group__3__Impl
	rule__Fill__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getFillAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fill__Group__4__Impl
	rule__Fill__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillAccess().getFillwithAssignment_4()); }
	(rule__Fill__FillwithAssignment_4)
	{ after(grammarAccess.getFillAccess().getFillwithAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fill__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFillAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Select__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__0__Impl
	rule__Select__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
	'Select'
	{ after(grammarAccess.getSelectAccess().getSelectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Select__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectAccess().getEltAssignment_1()); }
	(rule__Select__EltAssignment_1)
	{ after(grammarAccess.getSelectAccess().getEltAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__0__Impl
	rule__Verify__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }
	'Verify'
	{ after(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__1__Impl
	rule__Verify__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getVerifyAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__2__Impl
	rule__Verify__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getEltAssignment_2()); }
	(rule__Verify__EltAssignment_2)
	{ after(grammarAccess.getVerifyAccess().getEltAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__3__Impl
	rule__Verify__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getVerifyAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__4__Impl
	rule__Verify__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getFindAssignment_4()); }
	(rule__Verify__FindAssignment_4)
	{ after(grammarAccess.getVerifyAccess().getFindAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getVerifyAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Apply_All__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply_All__Group__0__Impl
	rule__Apply_All__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApply_AllAccess().getApply_AllKeyword_0()); }
	'Apply_All'
	{ after(grammarAccess.getApply_AllAccess().getApply_AllKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply_All__Group__1__Impl
	rule__Apply_All__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApply_AllAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getApply_AllAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply_All__Group__2__Impl
	rule__Apply_All__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApply_AllAccess().getEltAssignment_2()); }
	(rule__Apply_All__EltAssignment_2)
	{ after(grammarAccess.getApply_AllAccess().getEltAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply_All__Group__3__Impl
	rule__Apply_All__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApply_AllAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getApply_AllAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply_All__Group__4__Impl
	rule__Apply_All__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApply_AllAccess().getActionsAssignment_4()); }
	(rule__Apply_All__ActionsAssignment_4)*
	{ after(grammarAccess.getApply_AllAccess().getActionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Apply_All__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getApply_AllAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getApply_AllAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__0__Impl
	rule__If__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__1__Impl
	rule__If__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__2__Impl
	rule__If__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getCondAssignment_2()); }
	(rule__If__CondAssignment_2)
	{ after(grammarAccess.getIfAccess().getCondAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__3__Impl
	rule__If__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getAddAssignment_3()); }
	(rule__If__AddAssignment_3)*
	{ after(grammarAccess.getIfAccess().getAddAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__4__Impl
	rule__If__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__5__Impl
	rule__If__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__6__Impl
	rule__If__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getOperationsAssignment_6()); }
	(rule__If__OperationsAssignment_6)*
	{ after(grammarAccess.getIfAccess().getOperationsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__7__Impl
	rule__If__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getGroup_8()); }
	(rule__If__Group_8__0)?
	{ after(grammarAccess.getIfAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__If__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_8__0__Impl
	rule__If__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getElseKeyword_8_0()); }
	'else'
	{ after(grammarAccess.getIfAccess().getElseKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_8__1__Impl
	rule__If__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_8_1()); }
	'{'
	{ after(grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_8__2__Impl
	rule__If__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getOperationsbisAssignment_8_2()); }
	(rule__If__OperationsbisAssignment_8_2)*
	{ after(grammarAccess.getIfAccess().getOperationsbisAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__If__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_8_3()); }
	'}'
	{ after(grammarAccess.getIfAccess().getRightCurlyBracketKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__0__Impl
	rule__Store__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getStoreKeyword_0()); }
	'Store'
	{ after(grammarAccess.getStoreAccess().getStoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__1__Impl
	rule__Store__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getVarKeyword_1()); }
	'Var'
	{ after(grammarAccess.getStoreAccess().getVarKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__2__Impl
	rule__Store__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getVariAssignment_2()); }
	(rule__Store__VariAssignment_2)
	{ after(grammarAccess.getStoreAccess().getVariAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__3__Impl
	rule__Store__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getStoreAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getTAssignment_4()); }
	(rule__Store__TAssignment_4)
	{ after(grammarAccess.getStoreAccess().getTAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallFunction__Group__0__Impl
	rule__CallFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallFunctionAccess().getFuncKeyword_0()); }
	'func'
	{ after(grammarAccess.getCallFunctionAccess().getFuncKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallFunction__Group__1__Impl
	rule__CallFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCallFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallFunction__Group__2__Impl
	rule__CallFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallFunctionAccess().getNameAssignment_2()); }
	(rule__CallFunction__NameAssignment_2)
	{ after(grammarAccess.getCallFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallFunction__Group__3__Impl
	rule__CallFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallFunctionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getCallFunctionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallFunction__Group__4__Impl
	rule__CallFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallFunctionAccess().getVarsAssignment_4()); }
	(rule__CallFunction__VarsAssignment_4)*
	{ after(grammarAccess.getCallFunctionAccess().getVarsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallFunctionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getCallFunctionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FuncVar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVar__Group__0__Impl
	rule__FuncVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarAccess().getTypeAssignment_0()); }
	(rule__FuncVar__TypeAssignment_0)
	{ after(grammarAccess.getFuncVarAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FuncVar__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFuncVarAccess().getNameAssignment_1()); }
	(rule__FuncVar__NameAssignment_1)
	{ after(grammarAccess.getFuncVarAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'Function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameKeyword_2()); }
	'Name'
	{ after(grammarAccess.getFunctionAccess().getNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_3()); }
	(rule__Function__NameAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getVarKeyword_5()); }
	'Var'
	{ after(grammarAccess.getFunctionAccess().getVarKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
	rule__Function__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getEqualsSignKeyword_6()); }
	'='
	{ after(grammarAccess.getFunctionAccess().getEqualsSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__7__Impl
	rule__Function__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_7()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__8__Impl
	rule__Function__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getVarsAssignment_8()); }
	(rule__Function__VarsAssignment_8)*
	{ after(grammarAccess.getFunctionAccess().getVarsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__9__Impl
	rule__Function__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_9()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__10__Impl
	rule__Function__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_10()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__11__Impl
	rule__Function__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getOperationsAssignment_11()); }
	(rule__Function__OperationsAssignment_11)*
	{ after(grammarAccess.getFunctionAccess().getOperationsAssignment_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_12()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__0__Impl
	rule__ForLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getForKeyword_0()); }
	'For'
	{ after(grammarAccess.getForLoopAccess().getForKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__1__Impl
	rule__ForLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__2__Impl
	rule__ForLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getStartAssignment_2()); }
	(rule__ForLoop__StartAssignment_2)
	{ after(grammarAccess.getForLoopAccess().getStartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__3__Impl
	rule__ForLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getForLoopAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__4__Impl
	rule__ForLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getEndAssignment_4()); }
	(rule__ForLoop__EndAssignment_4)
	{ after(grammarAccess.getForLoopAccess().getEndAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__5__Impl
	rule__ForLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getCommaKeyword_5()); }
	','
	{ after(grammarAccess.getForLoopAccess().getCommaKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__6__Impl
	rule__ForLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getStepAssignment_6()); }
	(rule__ForLoop__StepAssignment_6)
	{ after(grammarAccess.getForLoopAccess().getStepAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__7__Impl
	rule__ForLoop__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__8__Impl
	rule__ForLoop__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8()); }
	'{'
	{ after(grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__9__Impl
	rule__ForLoop__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getOperationsAssignment_9()); }
	(rule__ForLoop__OperationsAssignment_9)*
	{ after(grammarAccess.getForLoopAccess().getOperationsAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForLoop__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
	'While'
	{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getCAssignment_2()); }
	(rule__WhileLoop__CAssignment_2)
	{ after(grammarAccess.getWhileLoopAccess().getCAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getAddAssignment_3()); }
	(rule__WhileLoop__AddAssignment_3)*
	{ after(grammarAccess.getWhileLoopAccess().getAddAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__4__Impl
	rule__WhileLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__5__Impl
	rule__WhileLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__6__Impl
	rule__WhileLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getOperationsAssignment_6()); }
	(rule__WhileLoop__OperationsAssignment_6)*
	{ after(grammarAccess.getWhileLoopAccess().getOperationsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoLoop__Group__0__Impl
	rule__DoLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoLoopAccess().getDoWhileKeyword_0()); }
	'DoWhile'
	{ after(grammarAccess.getDoLoopAccess().getDoWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoLoop__Group__1__Impl
	rule__DoLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoLoopAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDoLoopAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoLoop__Group__2__Impl
	rule__DoLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoLoopAccess().getCAssignment_2()); }
	(rule__DoLoop__CAssignment_2)
	{ after(grammarAccess.getDoLoopAccess().getCAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoLoop__Group__3__Impl
	rule__DoLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoLoopAccess().getAddAssignment_3()); }
	(rule__DoLoop__AddAssignment_3)*
	{ after(grammarAccess.getDoLoopAccess().getAddAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoLoop__Group__4__Impl
	rule__DoLoop__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoLoopAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDoLoopAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoLoop__Group__5__Impl
	rule__DoLoop__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoLoopAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getDoLoopAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoLoop__Group__6__Impl
	rule__DoLoop__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoLoopAccess().getOperationsAssignment_6()); }
	(rule__DoLoop__OperationsAssignment_6)*
	{ after(grammarAccess.getDoLoopAccess().getOperationsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoLoop__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoLoopAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getDoLoopAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionKeyword_0()); }
	'Condition'
	{ after(grammarAccess.getConditionAccess().getConditionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getAlternatives_1()); }
	(rule__Condition__Alternatives_1)
	{ after(grammarAccess.getConditionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCondition__Group__0__Impl
	rule__AddCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddConditionAccess().getOpAssignment_0()); }
	(rule__AddCondition__OpAssignment_0)
	{ after(grammarAccess.getAddConditionAccess().getOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddConditionAccess().getCondAssignment_1()); }
	(rule__AddCondition__CondAssignment_1)
	{ after(grammarAccess.getAddConditionAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Elements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Elements__Group__0__Impl
	rule__Elements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Elements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementsAccess().getElementsKeyword_0()); }
	'Elements'
	{ after(grammarAccess.getElementsAccess().getElementsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Elements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Elements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Elements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementsAccess().getTypeAssignment_1()); }
	(rule__Elements__TypeAssignment_1)
	{ after(grammarAccess.getElementsAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getElementKeyword_0()); }
	'Element'
	{ after(grammarAccess.getElementAccess().getElementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getTypeAssignment_1()); }
	(rule__Element__TypeAssignment_1)
	{ after(grammarAccess.getElementAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__0__Impl
	rule__Tag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getTagAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__1__Impl
	rule__Tag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getHtmlAssignment_1()); }
	(rule__Tag__HtmlAssignment_1)
	{ after(grammarAccess.getTagAccess().getHtmlAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__2__Impl
	rule__Tag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getTagAssignment_2()); }
	(rule__Tag__TagAssignment_2)
	{ after(grammarAccess.getTagAccess().getTagAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Tag__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTagAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getTagAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleOp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOp__Group__0__Impl
	rule__SimpleOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOpAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getSimpleOpAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOp__Group__1__Impl
	rule__SimpleOp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOpAccess().getElt1Assignment_1()); }
	(rule__SimpleOp__Elt1Assignment_1)
	{ after(grammarAccess.getSimpleOpAccess().getElt1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOp__Group__2__Impl
	rule__SimpleOp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOpAccess().getOpAssignment_2()); }
	(rule__SimpleOp__OpAssignment_2)
	{ after(grammarAccess.getSimpleOpAccess().getOpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOp__Group__3__Impl
	rule__SimpleOp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOpAccess().getElt2Assignment_3()); }
	(rule__SimpleOp__Elt2Assignment_3)
	{ after(grammarAccess.getSimpleOpAccess().getElt2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleOp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleOpAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getSimpleOpAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVarKeyword_0()); }
	'Var'
	{ after(grammarAccess.getVariableAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__FuncAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getFuncFunctionParserRuleCall_0_0()); }
		ruleFunction
		{ after(grammarAccess.getProgramAccess().getFuncFunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__BAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getBBrowser_TaskParserRuleCall_1_0()); }
		ruleBrowser_Task
		{ after(grammarAccess.getProgramAccess().getBBrowser_TaskParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBrowser_TaskAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getBrowser_TaskAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Browser_Task__OperationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBrowser_TaskAccess().getOperationsOperationParserRuleCall_4_0()); }
		ruleOperation
		{ after(grammarAccess.getBrowser_TaskAccess().getOperationsOperationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__EltAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickAccess().getEltElementParserRuleCall_1_0()); }
		ruleElement
		{ after(grammarAccess.getClickAccess().getEltElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__LinkAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoAccess().getLinkTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getGoAccess().getLinkTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__EltAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillAccess().getEltElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getFillAccess().getEltElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fill__FillwithAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillAccess().getFillwithTextParserRuleCall_4_0()); }
		ruleText
		{ after(grammarAccess.getFillAccess().getFillwithTextParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Select__EltAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectAccess().getEltElementParserRuleCall_1_0()); }
		ruleElement
		{ after(grammarAccess.getSelectAccess().getEltElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__EltAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getEltElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getVerifyAccess().getEltElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__FindAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getFindTextParserRuleCall_4_0()); }
		ruleText
		{ after(grammarAccess.getVerifyAccess().getFindTextParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__EltAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApply_AllAccess().getEltElementsParserRuleCall_2_0()); }
		ruleElements
		{ after(grammarAccess.getApply_AllAccess().getEltElementsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Apply_All__ActionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getApply_AllAccess().getActionsActionParserRuleCall_4_0()); }
		ruleAction
		{ after(grammarAccess.getApply_AllAccess().getActionsActionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__CondAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getCondConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getIfAccess().getCondConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__AddAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getAddAddConditionParserRuleCall_3_0()); }
		ruleAddCondition
		{ after(grammarAccess.getIfAccess().getAddAddConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__OperationsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getOperationsOperationParserRuleCall_6_0()); }
		ruleOperation
		{ after(grammarAccess.getIfAccess().getOperationsOperationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__If__OperationsbisAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfAccess().getOperationsbisOperationParserRuleCall_8_2_0()); }
		ruleOperation
		{ after(grammarAccess.getIfAccess().getOperationsbisOperationParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__VariAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getVariIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getStoreAccess().getVariIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__TAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getTTypeParserRuleCall_4_0()); }
		ruleType
		{ after(grammarAccess.getStoreAccess().getTTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallFunctionAccess().getNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getCallFunctionAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallFunction__VarsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallFunctionAccess().getVarsVariableParserRuleCall_4_0()); }
		ruleVariable
		{ after(grammarAccess.getCallFunctionAccess().getVarsVariableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TextAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getTextTextParserRuleCall_0_0()); }
		ruleText
		{ after(grammarAccess.getTypeAccess().getTextTextParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__EltsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getEltsElementsParserRuleCall_1_0()); }
		ruleElements
		{ after(grammarAccess.getTypeAccess().getEltsElementsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__EltAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getEltElementParserRuleCall_2_0()); }
		ruleElement
		{ after(grammarAccess.getTypeAccess().getEltElementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getCondConditionParserRuleCall_3_0()); }
		ruleCondition
		{ after(grammarAccess.getTypeAccess().getCondConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__TextAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTypeAccess().getTextTextKeyword_0_0()); }
		(
			{ before(grammarAccess.getStringTypeAccess().getTextTextKeyword_0_0()); }
			'Text'
			{ after(grammarAccess.getStringTypeAccess().getTextTextKeyword_0_0()); }
		)
		{ after(grammarAccess.getStringTypeAccess().getTextTextKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__EltsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTypeAccess().getEltsElementsKeyword_1_0()); }
		(
			{ before(grammarAccess.getStringTypeAccess().getEltsElementsKeyword_1_0()); }
			'Elements'
			{ after(grammarAccess.getStringTypeAccess().getEltsElementsKeyword_1_0()); }
		)
		{ after(grammarAccess.getStringTypeAccess().getEltsElementsKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__EltAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTypeAccess().getEltElementKeyword_2_0()); }
		(
			{ before(grammarAccess.getStringTypeAccess().getEltElementKeyword_2_0()); }
			'Element'
			{ after(grammarAccess.getStringTypeAccess().getEltElementKeyword_2_0()); }
		)
		{ after(grammarAccess.getStringTypeAccess().getEltElementKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringType__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTypeAccess().getCondConditionKeyword_3_0()); }
		(
			{ before(grammarAccess.getStringTypeAccess().getCondConditionKeyword_3_0()); }
			'Condition'
			{ after(grammarAccess.getStringTypeAccess().getCondConditionKeyword_3_0()); }
		)
		{ after(grammarAccess.getStringTypeAccess().getCondConditionKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVar__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncVarAccess().getTypeStringTypeParserRuleCall_0_0()); }
		ruleStringType
		{ after(grammarAccess.getFuncVarAccess().getTypeStringTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FuncVar__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFuncVarAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFuncVarAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getFunctionAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__VarsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getVarsFuncVarParserRuleCall_8_0()); }
		ruleFuncVar
		{ after(grammarAccess.getFunctionAccess().getVarsFuncVarParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__OperationsAssignment_11
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getOperationsOperationParserRuleCall_11_0()); }
		ruleOperation
		{ after(grammarAccess.getFunctionAccess().getOperationsOperationParserRuleCall_11_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__StartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getStartINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getForLoopAccess().getStartINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__EndAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getEndINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getForLoopAccess().getEndINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__StepAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getStepINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getForLoopAccess().getStepINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForLoop__OperationsAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForLoopAccess().getOperationsOperationParserRuleCall_9_0()); }
		ruleOperation
		{ after(grammarAccess.getForLoopAccess().getOperationsOperationParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__CAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getCConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getWhileLoopAccess().getCConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__AddAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getAddAddConditionParserRuleCall_3_0()); }
		ruleAddCondition
		{ after(grammarAccess.getWhileLoopAccess().getAddAddConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__OperationsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getOperationsOperationParserRuleCall_6_0()); }
		ruleOperation
		{ after(grammarAccess.getWhileLoopAccess().getOperationsOperationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__CAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoLoopAccess().getCConditionParserRuleCall_2_0()); }
		ruleCondition
		{ after(grammarAccess.getDoLoopAccess().getCConditionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__AddAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoLoopAccess().getAddAddConditionParserRuleCall_3_0()); }
		ruleAddCondition
		{ after(grammarAccess.getDoLoopAccess().getAddAddConditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoLoop__OperationsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoLoopAccess().getOperationsOperationParserRuleCall_6_0()); }
		ruleOperation
		{ after(grammarAccess.getDoLoopAccess().getOperationsOperationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCondition__OpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddConditionAccess().getOpAlternatives_0_0()); }
		(rule__AddCondition__OpAlternatives_0_0)
		{ after(grammarAccess.getAddConditionAccess().getOpAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCondition__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddConditionAccess().getCondConditionParserRuleCall_1_0()); }
		ruleCondition
		{ after(grammarAccess.getAddConditionAccess().getCondConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Elements__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementsAccess().getTypeEltTypeParserRuleCall_1_0()); }
		ruleEltType
		{ after(grammarAccess.getElementsAccess().getTypeEltTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getTypeEltTypeParserRuleCall_1_0()); }
		ruleEltType
		{ after(grammarAccess.getElementAccess().getTypeEltTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__HtmlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getHtmlHTML_ELTTerminalRuleCall_1_0()); }
		RULE_HTML_ELT
		{ after(grammarAccess.getTagAccess().getHtmlHTML_ELTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__TagAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTagAccess().getTagTextParserRuleCall_2_0()); }
		ruleText
		{ after(grammarAccess.getTagAccess().getTagTextParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Elt1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleOpAccess().getElt1ComparableEltParserRuleCall_1_0()); }
		ruleComparableElt
		{ after(grammarAccess.getSimpleOpAccess().getElt1ComparableEltParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__OpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleOpAccess().getOpOPTerminalRuleCall_2_0()); }
		RULE_OP
		{ after(grammarAccess.getSimpleOpAccess().getOpOPTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleOp__Elt2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleOpAccess().getElt2ComparableEltParserRuleCall_3_0()); }
		ruleComparableElt
		{ after(grammarAccess.getSimpleOpAccess().getElt2ComparableEltParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparableElt__InteAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparableEltAccess().getInteINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getComparableEltAccess().getInteINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparableElt__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparableEltAccess().getTextTextParserRuleCall_1_0()); }
		ruleText
		{ after(grammarAccess.getComparableEltAccess().getTextTextParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__VariAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getVariVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getTextAccess().getVariVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_HTML_ELT : ('id'|'class'|'tagName'|'name'|'linkText'|'partialLinkText');

RULE_OP : ('<'|'>'|'!='|'==');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
