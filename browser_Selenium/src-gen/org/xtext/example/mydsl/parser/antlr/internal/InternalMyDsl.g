/*
 * generated by Xtext 2.9.1
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getFuncFunctionParserRuleCall_0_0());
				}
				lv_func_0_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"func",
						lv_func_0_0,
						"org.xtext.example.mydsl.MyDsl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getBBrowser_TaskParserRuleCall_1_0());
				}
				lv_b_1_0=ruleBrowser_Task
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					set(
						$current,
						"b",
						lv_b_1_0,
						"org.xtext.example.mydsl.MyDsl.Browser_Task");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBrowser_Task
entryRuleBrowser_Task returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBrowser_TaskRule()); }
	iv_ruleBrowser_Task=ruleBrowser_Task
	{ $current=$iv_ruleBrowser_Task.current; }
	EOF;

// Rule Browser_Task
ruleBrowser_Task returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Selenium'
		{
			newLeafNode(otherlv_0, grammarAccess.getBrowser_TaskAccess().getSeleniumKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBrowser_TaskAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='Browser'
		{
			newLeafNode(otherlv_2, grammarAccess.getBrowser_TaskAccess().getBrowserKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getBrowser_TaskAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBrowser_TaskRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBrowser_TaskAccess().getOperationsOperationParserRuleCall_4_0());
				}
				lv_operations_4_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBrowser_TaskRule());
					}
					add(
						$current,
						"operations",
						lv_operations_4_0,
						"org.xtext.example.mydsl.MyDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getBrowser_TaskAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getActionParserRuleCall_0());
		}
		this_Action_0=ruleAction
		{
			$current = $this_Action_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getLoopParserRuleCall_1());
		}
		this_Loop_1=ruleLoop
		{
			$current = $this_Loop_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getApply_AllParserRuleCall_2());
		}
		this_Apply_All_2=ruleApply_All
		{
			$current = $this_Apply_All_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getIfParserRuleCall_3());
		}
		this_If_3=ruleIf
		{
			$current = $this_If_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getStoreParserRuleCall_4());
		}
		this_Store_4=ruleStore
		{
			$current = $this_Store_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getCallFunctionParserRuleCall_5());
		}
		this_CallFunction_5=ruleCallFunction
		{
			$current = $this_CallFunction_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getActionAccess().getClickParserRuleCall_0());
		}
		this_Click_0=ruleClick
		{
			$current = $this_Click_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getGoParserRuleCall_1());
		}
		this_Go_1=ruleGo
		{
			$current = $this_Go_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getFillParserRuleCall_2());
		}
		this_Fill_2=ruleFill
		{
			$current = $this_Fill_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getSelectParserRuleCall_3());
		}
		this_Select_3=ruleSelect
		{
			$current = $this_Select_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getActionAccess().getVerifyParserRuleCall_4());
		}
		this_Verify_4=ruleVerify
		{
			$current = $this_Verify_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClick
entryRuleClick returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickRule()); }
	iv_ruleClick=ruleClick
	{ $current=$iv_ruleClick.current; }
	EOF;

// Rule Click
ruleClick returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Click'
		{
			newLeafNode(otherlv_0, grammarAccess.getClickAccess().getClickKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClickAccess().getEltElementParserRuleCall_1_0());
				}
				lv_elt_1_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClickRule());
					}
					set(
						$current,
						"elt",
						lv_elt_1_0,
						"org.xtext.example.mydsl.MyDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGo
entryRuleGo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGoRule()); }
	iv_ruleGo=ruleGo
	{ $current=$iv_ruleGo.current; }
	EOF;

// Rule Go
ruleGo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Go'
		{
			newLeafNode(otherlv_0, grammarAccess.getGoAccess().getGoKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGoAccess().getLinkTextParserRuleCall_1_0());
				}
				lv_link_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGoRule());
					}
					set(
						$current,
						"link",
						lv_link_1_0,
						"org.xtext.example.mydsl.MyDsl.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFill
entryRuleFill returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFillRule()); }
	iv_ruleFill=ruleFill
	{ $current=$iv_ruleFill.current; }
	EOF;

// Rule Fill
ruleFill returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Fill'
		{
			newLeafNode(otherlv_0, grammarAccess.getFillAccess().getFillKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFillAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFillAccess().getEltElementParserRuleCall_2_0());
				}
				lv_elt_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFillRule());
					}
					set(
						$current,
						"elt",
						lv_elt_2_0,
						"org.xtext.example.mydsl.MyDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getFillAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFillAccess().getFillwithTextParserRuleCall_4_0());
				}
				lv_fillwith_4_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFillRule());
					}
					set(
						$current,
						"fillwith",
						lv_fillwith_4_0,
						"org.xtext.example.mydsl.MyDsl.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFillAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Select'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectAccess().getSelectKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectAccess().getEltElementParserRuleCall_1_0());
				}
				lv_elt_1_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectRule());
					}
					set(
						$current,
						"elt",
						lv_elt_1_0,
						"org.xtext.example.mydsl.MyDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVerify
entryRuleVerify returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerifyRule()); }
	iv_ruleVerify=ruleVerify
	{ $current=$iv_ruleVerify.current; }
	EOF;

// Rule Verify
ruleVerify returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Verify'
		{
			newLeafNode(otherlv_0, grammarAccess.getVerifyAccess().getVerifyKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getVerifyAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifyAccess().getEltElementParserRuleCall_2_0());
				}
				lv_elt_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifyRule());
					}
					set(
						$current,
						"elt",
						lv_elt_2_0,
						"org.xtext.example.mydsl.MyDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getVerifyAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVerifyAccess().getFindTextParserRuleCall_4_0());
				}
				lv_find_4_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVerifyRule());
					}
					set(
						$current,
						"find",
						lv_find_4_0,
						"org.xtext.example.mydsl.MyDsl.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getVerifyAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleApply_All
entryRuleApply_All returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApply_AllRule()); }
	iv_ruleApply_All=ruleApply_All
	{ $current=$iv_ruleApply_All.current; }
	EOF;

// Rule Apply_All
ruleApply_All returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Apply_All'
		{
			newLeafNode(otherlv_0, grammarAccess.getApply_AllAccess().getApply_AllKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getApply_AllAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getApply_AllAccess().getEltElementParserRuleCall_2_0());
				}
				lv_elt_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApply_AllRule());
					}
					set(
						$current,
						"elt",
						lv_elt_2_0,
						"org.xtext.example.mydsl.MyDsl.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getApply_AllAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getApply_AllAccess().getActionsActionParserRuleCall_4_0());
				}
				lv_actions_4_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getApply_AllRule());
					}
					add(
						$current,
						"actions",
						lv_actions_4_0,
						"org.xtext.example.mydsl.MyDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getApply_AllAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getCondConditionParserRuleCall_2_0());
				}
				lv_cond_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"cond",
						lv_cond_2_0,
						"org.xtext.example.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getAddAddConditionParserRuleCall_3_0());
				}
				lv_add_3_0=ruleAddCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					add(
						$current,
						"add",
						lv_add_3_0,
						"org.xtext.example.mydsl.MyDsl.AddCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getOperationsOperationParserRuleCall_6_0());
				}
				lv_operations_6_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					add(
						$current,
						"operations",
						lv_operations_6_0,
						"org.xtext.example.mydsl.MyDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getIfAccess().getRightCurlyBracketKeyword_7());
		}
		(
			otherlv_8='else'
			{
				newLeafNode(otherlv_8, grammarAccess.getIfAccess().getElseKeyword_8_0());
			}
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getIfAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getOperationsbisOperationParserRuleCall_8_2_0());
					}
					lv_operationsbis_10_0=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						add(
							$current,
							"operationsbis",
							lv_operationsbis_10_0,
							"org.xtext.example.mydsl.MyDsl.Operation");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getIfAccess().getRightCurlyBracketKeyword_8_3());
			}
		)?
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Store'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreAccess().getStoreKeyword_0());
		}
		otherlv_1='Var'
		{
			newLeafNode(otherlv_1, grammarAccess.getStoreAccess().getVarKeyword_1());
		}
		(
			(
				lv_var_2_0=RULE_STRING
				{
					newLeafNode(lv_var_2_0, grammarAccess.getStoreAccess().getVarSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoreRule());
					}
					setWithLastConsumed(
						$current,
						"var",
						lv_var_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getStoreAccess().getEqualsSignKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStoreAccess().getTextTextParserRuleCall_4_0_0());
					}
					lv_text_4_0=ruleText
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStoreRule());
						}
						set(
							$current,
							"text",
							lv_text_4_0,
							"org.xtext.example.mydsl.MyDsl.Text");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getStoreAccess().getEltElementParserRuleCall_4_1_0());
					}
					lv_elt_5_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStoreRule());
						}
						set(
							$current,
							"elt",
							lv_elt_5_0,
							"org.xtext.example.mydsl.MyDsl.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCallFunction
entryRuleCallFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallFunctionRule()); }
	iv_ruleCallFunction=ruleCallFunction
	{ $current=$iv_ruleCallFunction.current; }
	EOF;

// Rule CallFunction
ruleCallFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='func'
		{
			newLeafNode(otherlv_0, grammarAccess.getCallFunctionAccess().getFuncKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCallFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCallFunctionAccess().getVarsVariableParserRuleCall_2_0());
				}
				lv_vars_2_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCallFunctionRule());
					}
					add(
						$current,
						"vars",
						lv_vars_2_0,
						"org.xtext.example.mydsl.MyDsl.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCallFunctionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2='Name'
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getNameKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getFunctionAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getCommaKeyword_4());
		}
		otherlv_5='Var'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getVarKeyword_5());
		}
		otherlv_6='='
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getEqualsSignKeyword_6());
		}
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getVarsVariableParserRuleCall_8_0());
				}
				lv_vars_8_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					add(
						$current,
						"vars",
						lv_vars_8_0,
						"org.xtext.example.mydsl.MyDsl.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_9());
		}
		otherlv_10=','
		{
			newLeafNode(otherlv_10, grammarAccess.getFunctionAccess().getCommaKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getOperationsOperationParserRuleCall_11_0());
				}
				lv_operations_11_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					add(
						$current,
						"operations",
						lv_operations_11_0,
						"org.xtext.example.mydsl.MyDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_12());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLoopAccess().getForLoopParserRuleCall_0());
		}
		this_ForLoop_0=ruleForLoop
		{
			$current = $this_ForLoop_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoopAccess().getWhileLoopParserRuleCall_1());
		}
		this_WhileLoop_1=ruleWhileLoop
		{
			$current = $this_WhileLoop_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLoopAccess().getDoLoopParserRuleCall_2());
		}
		this_DoLoop_2=ruleDoLoop
		{
			$current = $this_DoLoop_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleForLoop
entryRuleForLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForLoopRule()); }
	iv_ruleForLoop=ruleForLoop
	{ $current=$iv_ruleForLoop.current; }
	EOF;

// Rule ForLoop
ruleForLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='For'
		{
			newLeafNode(otherlv_0, grammarAccess.getForLoopAccess().getForKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForLoopAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_start_2_0=RULE_INT
				{
					newLeafNode(lv_start_2_0, grammarAccess.getForLoopAccess().getStartINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForLoopRule());
					}
					setWithLastConsumed(
						$current,
						"start",
						lv_start_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getForLoopAccess().getCommaKeyword_3());
		}
		(
			(
				lv_end_4_0=RULE_INT
				{
					newLeafNode(lv_end_4_0, grammarAccess.getForLoopAccess().getEndINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForLoopRule());
					}
					setWithLastConsumed(
						$current,
						"end",
						lv_end_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getForLoopAccess().getCommaKeyword_5());
		}
		(
			(
				lv_step_6_0=RULE_INT
				{
					newLeafNode(lv_step_6_0, grammarAccess.getForLoopAccess().getStepINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getForLoopRule());
					}
					setWithLastConsumed(
						$current,
						"step",
						lv_step_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getForLoopAccess().getRightParenthesisKeyword_7());
		}
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getForLoopAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForLoopAccess().getOperationsOperationParserRuleCall_9_0());
				}
				lv_operations_9_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForLoopRule());
					}
					add(
						$current,
						"operations",
						lv_operations_9_0,
						"org.xtext.example.mydsl.MyDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getForLoopAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileLoopRule()); }
	iv_ruleWhileLoop=ruleWhileLoop
	{ $current=$iv_ruleWhileLoop.current; }
	EOF;

// Rule WhileLoop
ruleWhileLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='While'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileLoopAccess().getWhileKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopAccess().getCConditionParserRuleCall_2_0());
				}
				lv_c_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRule());
					}
					set(
						$current,
						"c",
						lv_c_2_0,
						"org.xtext.example.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopAccess().getAddAddConditionParserRuleCall_3_0());
				}
				lv_add_3_0=ruleAddCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRule());
					}
					add(
						$current,
						"add",
						lv_add_3_0,
						"org.xtext.example.mydsl.MyDsl.AddCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileLoopAccess().getOperationsOperationParserRuleCall_6_0());
				}
				lv_operations_6_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileLoopRule());
					}
					add(
						$current,
						"operations",
						lv_operations_6_0,
						"org.xtext.example.mydsl.MyDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDoLoop
entryRuleDoLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoLoopRule()); }
	iv_ruleDoLoop=ruleDoLoop
	{ $current=$iv_ruleDoLoop.current; }
	EOF;

// Rule DoLoop
ruleDoLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DoWhile'
		{
			newLeafNode(otherlv_0, grammarAccess.getDoLoopAccess().getDoWhileKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getDoLoopAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoLoopAccess().getCConditionParserRuleCall_2_0());
				}
				lv_c_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoLoopRule());
					}
					set(
						$current,
						"c",
						lv_c_2_0,
						"org.xtext.example.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDoLoopAccess().getAddAddConditionParserRuleCall_3_0());
				}
				lv_add_3_0=ruleAddCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoLoopRule());
					}
					add(
						$current,
						"add",
						lv_add_3_0,
						"org.xtext.example.mydsl.MyDsl.AddCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getDoLoopAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getDoLoopAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoLoopAccess().getOperationsOperationParserRuleCall_6_0());
				}
				lv_operations_6_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoLoopRule());
					}
					add(
						$current,
						"operations",
						lv_operations_6_0,
						"org.xtext.example.mydsl.MyDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getDoLoopAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Condition'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getConditionKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getConditionAccess().getSimpleOpParserRuleCall_1_0());
			}
			this_SimpleOp_1=ruleSimpleOp
			{
				$current = $this_SimpleOp_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getConditionAccess().getVerifyParserRuleCall_1_1());
			}
			this_Verify_2=ruleVerify
			{
				$current = $this_Verify_2.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getConditionAccess().getVariableParserRuleCall_1_2());
			}
			this_Variable_3=ruleVariable
			{
				$current = $this_Variable_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAddCondition
entryRuleAddCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddConditionRule()); }
	iv_ruleAddCondition=ruleAddCondition
	{ $current=$iv_ruleAddCondition.current; }
	EOF;

// Rule AddCondition
ruleAddCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_op_0_1='And'
					{
						newLeafNode(lv_op_0_1, grammarAccess.getAddConditionAccess().getOpAndKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddConditionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_1, null);
					}
					    |
					lv_op_0_2='Or'
					{
						newLeafNode(lv_op_0_2, grammarAccess.getAddConditionAccess().getOpOrKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAddConditionRule());
						}
						setWithLastConsumed($current, "op", lv_op_0_2, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAddConditionAccess().getCondConditionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddConditionRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"org.xtext.example.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Element'
		{
			newLeafNode(otherlv_0, grammarAccess.getElementAccess().getElementKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getElementAccess().getTypeEltTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleEltType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl.MyDsl.EltType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEltType
entryRuleEltType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEltTypeRule()); }
	iv_ruleEltType=ruleEltType
	{ $current=$iv_ruleEltType.current; }
	EOF;

// Rule EltType
ruleEltType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEltTypeAccess().getTagParserRuleCall_0());
		}
		this_Tag_0=ruleTag
		{
			$current = $this_Tag_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		otherlv_1='URL'
		{
			newLeafNode(otherlv_1, grammarAccess.getEltTypeAccess().getURLKeyword_1());
		}
		    |
		{
			newCompositeNode(grammarAccess.getEltTypeAccess().getVariableParserRuleCall_2());
		}
		this_Variable_2=ruleVariable
		{
			$current = $this_Variable_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current; }
	EOF;

// Rule Tag
ruleTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getTagAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				lv_html_1_0=RULE_HTML_ELT
				{
					newLeafNode(lv_html_1_0, grammarAccess.getTagAccess().getHtmlHTML_ELTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagRule());
					}
					setWithLastConsumed(
						$current,
						"html",
						lv_html_1_0,
						"org.xtext.example.mydsl.MyDsl.HTML_ELT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTagAccess().getTagTextParserRuleCall_2_0());
				}
				lv_tag_2_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTagRule());
					}
					set(
						$current,
						"tag",
						lv_tag_2_0,
						"org.xtext.example.mydsl.MyDsl.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getTagAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSimpleOp
entryRuleSimpleOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleOpRule()); }
	iv_ruleSimpleOp=ruleSimpleOp
	{ $current=$iv_ruleSimpleOp.current; }
	EOF;

// Rule SimpleOp
ruleSimpleOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getSimpleOpAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleOpAccess().getElt1ComparableEltParserRuleCall_1_0());
				}
				lv_elt1_1_0=ruleComparableElt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleOpRule());
					}
					set(
						$current,
						"elt1",
						lv_elt1_1_0,
						"org.xtext.example.mydsl.MyDsl.ComparableElt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_op_2_0=RULE_OP
				{
					newLeafNode(lv_op_2_0, grammarAccess.getSimpleOpAccess().getOpOPTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleOpRule());
					}
					setWithLastConsumed(
						$current,
						"op",
						lv_op_2_0,
						"org.xtext.example.mydsl.MyDsl.OP");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSimpleOpAccess().getElt2ComparableEltParserRuleCall_3_0());
				}
				lv_elt2_3_0=ruleComparableElt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSimpleOpRule());
					}
					set(
						$current,
						"elt2",
						lv_elt2_3_0,
						"org.xtext.example.mydsl.MyDsl.ComparableElt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getSimpleOpAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleComparableElt
entryRuleComparableElt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparableEltRule()); }
	iv_ruleComparableElt=ruleComparableElt
	{ $current=$iv_ruleComparableElt.current; }
	EOF;

// Rule ComparableElt
ruleComparableElt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_inte_0_0=RULE_INT
				{
					newLeafNode(lv_inte_0_0, grammarAccess.getComparableEltAccess().getInteINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComparableEltRule());
					}
					setWithLastConsumed(
						$current,
						"inte",
						lv_inte_0_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getComparableEltAccess().getTextTextParserRuleCall_1_0());
				}
				lv_text_1_0=ruleText
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparableEltRule());
					}
					set(
						$current,
						"text",
						lv_text_1_0,
						"org.xtext.example.mydsl.MyDsl.Text");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTextAccess().getVariVariableParserRuleCall_0_0());
				}
				lv_vari_0_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextRule());
					}
					set(
						$current,
						"vari",
						lv_vari_0_0,
						"org.xtext.example.mydsl.MyDsl.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTextAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Var'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

RULE_HTML_ELT : ('id'|'class'|'tagName'|'name'|'linkText'|'partialLinkText');

RULE_OP : ('<'|'>'|'!='|'==');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
