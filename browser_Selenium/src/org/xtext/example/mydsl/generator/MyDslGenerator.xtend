/*
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.myDsl.Program
import org.xtext.example.mydsl.myDsl.Action
import org.xtext.example.mydsl.myDsl.Loop
import org.xtext.example.mydsl.myDsl.Apply_All
import org.xtext.example.mydsl.myDsl.If
import org.xtext.example.mydsl.myDsl.Store
import org.xtext.example.mydsl.myDsl.CallFunction
import org.xtext.example.mydsl.myDsl.Click
import org.xtext.example.mydsl.myDsl.Go
import org.xtext.example.mydsl.myDsl.Fill
import org.xtext.example.mydsl.myDsl.Select
import org.xtext.example.mydsl.myDsl.Verify
import org.xtext.example.mydsl.myDsl.Variable
import org.xtext.example.mydsl.myDsl.Tag
import org.xtext.example.mydsl.myDsl.EltType
import org.xtext.example.mydsl.myDsl.ForLoop
import org.xtext.example.mydsl.myDsl.WhileLoop
import org.xtext.example.mydsl.myDsl.AddCondition
import org.xtext.example.mydsl.myDsl.Condition
import org.xtext.example.mydsl.myDsl.SimpleOp
import org.xtext.example.mydsl.myDsl.DoLoop
import org.xtext.example.mydsl.myDsl.ComparableElt
import org.xtext.example.mydsl.myDsl.Text
import org.eclipse.emf.common.util.EList
import org.xtext.example.mydsl.myDsl.Operation
import org.xtext.example.mydsl.myDsl.Element
import org.xtext.example.mydsl.myDsl.Elements

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
var program = resource.contents.head as Program
		fsa.generateFile('TestInternal.java',program.genProgram)
		
	}
	
	def genProgram(Program p) '''
		
		import org.openqa.selenium.WebDriver;
		import org.openqa.selenium.chrome.ChromeDriver;
		import org.openqa.selenium.WebElement;
		import org.openqa.selenium.By;
		import java.util.List;

		«FOR e : p.func»
			public void «e.name»(){
			//func«p.func.indexOf(e)».setName("«e.name»");
			//func«p.func.indexOf(e)».setVars(«e.vars»);
			//func«p.func.indexOf(e)».setOperations(«e.operations»);
			//program.addFunction(func«p.func.indexOf(e)»);
			}
        «ENDFOR»

		public class TestInternal {
			public static void main(String[] args) {
		
				System.out.println("Start building the program");
				«p.genCore»	
				System.out.println("Finish building the program");
			}
			
			
		}
	'''
	
	def genCore (Program p) '''
	
			System.setProperty("webdriver.chrome.driver", "C:/Program Files (x86)/Google/Chrome/Application/chromedriver.exe");
			WebDriver driver=new  ChromeDriver();
			driver.get("https://www.google.com");
			//Selenium selenium = new DefaultSelenium("localhost"", 4444, ""*firefox"", "http://www.google.com");
			«p.b.operations.genOperations()»
			driver.quit();
	'''
	
	def genAction (Action a, int i, Elements elt) '''
		«IF elt == null»
			«IF a instanceof Click»
				WebElement element_«i» = «a.elt.type.genCore»;
				element_«i».click();
	        «ENDIF»
	        «IF a instanceof Go»driver.get("«a.link.name»");«ENDIF»
	        «IF a instanceof Fill»
				WebElement element_«i» = «a.elt.type.genCore»;
				element_«i».sendKeys("«a.fillwith.name»");
	        	element_«i».submit();
	        «ENDIF»
	        «IF a instanceof Select»
	        	WebElement element_«i» = «a.elt.type.genCore»;
				element_«i».click();
	        «ENDIF»
	        «IF a instanceof Verify»
	        	WebElement element_«i» = «a.elt.type.genCore»;
				String message_«i» = element_«i».getText();
				System.out.println(message_«i».contains("«a.find.name»"));
	        «ENDIF»
	    «ELSE»
	    	«IF a instanceof Click»elt.click();«ENDIF»
	        «IF a instanceof Fill»
				elt.sendKeys("«a.fillwith.name»");
	        	elt.submit();
	        «ENDIF»
	        «IF a instanceof Select»
				elt.click();
	        «ENDIF»
	        «IF a instanceof Verify»
				elt.getText().contains("«a.find.name»"));
	        «ENDIF»
		«ENDIF»
	'''
	
	def genCore (EltType e) '''
		«IF e instanceof Tag»driver.findElement(By.«e.html»("«e.tag.name»"))
		«ELSE»«IF e instanceof Variable»«e.name»
		«ELSE»driver.getCurrentUrl()«ENDIF»«ENDIF»
	'''
	
	def genCores (EltType e) '''
		«IF e instanceof Tag»driver.findElements(By.«e.html»("«e.tag.name»"))
		«ELSE»«IF e instanceof Variable»«e.name»
		«ELSE»[driver.getCurrentUrl()]«ENDIF»«ENDIF»
	'''

	def genCore (AddCondition c) '''
		«IF c.op == 'And'»&& «c.cond.genCore» «ENDIF»
		«IF c.op == 'Or'»|| «c.cond.genCore» «ENDIF»
	'''
	
	def genCore (Condition c) '''
		«IF c instanceof Variable»«c.name»«ENDIF»
		«IF c instanceof Verify»(«c.elt.type.genCore»«IF c.elt.type instanceof Tag || c.elt.type instanceof Variable».getText()«ENDIF».contains("«c.find.name»"))«ENDIF»
		«IF c instanceof SimpleOp»(«c.elt1.genCore»«c.op»«c.elt2.genCore»)«ENDIF»
	'''
	
	def genCore (ComparableElt e) '''«IF e.text != null »«e.text.genText»«ELSE»«e.inte»«ENDIF»'''
	
	
	def genText (Text t) '''
		«IF t.vari != null »«t.vari.name»«ENDIF»
		«IF t.name != null »«t.name»«ENDIF»
	'''

	def genOperations(EList<Operation> operations)'''
	«FOR e : operations»
    	«e.genOperation(operations.indexOf(e))»
    «ENDFOR»
	'''
	
	def genOperation(Operation e, int i)'''
		«IF e instanceof Action»
    		«e.genAction(i, null)»
    	«ENDIF»
    	«IF e instanceof Loop»
    		«e.genCore»
    	«ENDIF»
    	«IF e instanceof Apply_All»
    		for(WebElement elt:«e.elt.type.genCores»){
    			«FOR op : e.actions»
    				«op.genAction(0, e.elt)»
    			«ENDFOR»
    		}
    	«ENDIF»
    	«IF e instanceof If»
    	     «e.genCore»
    	«ENDIF»
    	«IF e instanceof Store»
    		«IF e.elt != null»
    			WebElement «e.vari» = «e.elt.type.genCore»;
    		«ELSE»
    			«IF e.elts != null»
    			   	List<WebElement> «e.vari» = «e.elts.type.genCores»;
    			«ELSE»
    				«IF e.cond != null»
    			    	Boolean «e.vari» = «e.cond.genCore»;
    			    «ELSE»
    			    	String «e.vari» = «e.text»;
    			    «ENDIF»
    			«ENDIF»
    		«ENDIF»
    	«ENDIF»
    	«IF e instanceof CallFunction»
    	«ENDIF»
	'''

	def genCore (Loop l) '''
		«IF l instanceof ForLoop»
			for(int i=«l.start»; i<«l.end»; i=i+«l.step»){
				«l.operations.genOperations»
			}
		«ENDIF»	
		«IF l instanceof WhileLoop»
			while(«l.c.genCore»«FOR c : l.add»«c.genCore»«ENDFOR»){
				«l.operations.genOperations»
			}
		«ENDIF»
		«IF l instanceof DoLoop»
			«l.operations.genOperations»
			while(«l.c.genCore»«FOR c : l.add»«c.genCore»«ENDFOR»){
				«l.operations.genOperations»
			}
		«ENDIF»
	'''
	
	def genCore (If i) '''
		if(«i.cond.genCore»«FOR c : i.add»«c.genCore»«ENDFOR»){
			«i.operations.genOperations»
		}
		else{
			«i.operationsbis.genOperations»
		}
	'''
}
