/*
 * generated by Xtext 2.9.1
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.myDsl.Operation
import org.xtext.example.mydsl.myDsl.Program
import org.xtext.example.mydsl.myDsl.Browser_Task
import org.xtext.example.mydsl.myDsl.Action
import org.xtext.example.mydsl.myDsl.Store
import org.xtext.example.mydsl.myDsl.Loop
import org.xtext.example.mydsl.myDsl.Apply_All
import org.xtext.example.mydsl.myDsl.If
import org.xtext.example.mydsl.myDsl.CallFunction
import org.xtext.example.mydsl.myDsl.Click
import org.xtext.example.mydsl.myDsl.Go
import org.xtext.example.mydsl.myDsl.Fill
import org.xtext.example.mydsl.myDsl.Select
import org.xtext.example.mydsl.myDsl.FindIf
import org.xtext.example.mydsl.myDsl.Verify
import org.xtext.example.mydsl.myDsl.Element
import org.xtext.example.mydsl.myDsl.Tag
import org.xtext.example.mydsl.myDsl.Variable

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		var program = resource.contents.head as Program
		fsa.generateFile('browser_automation\\internal\\TestInternal.java',program.genProgram)
	}
	
	def genProgram(Program p) '''

		package browser_automation.internal;
		
		import browser_automation.Program;
		import browser_automation.OP;
		import browser_automation.HTML_ELT;
		import browser_automation.Variable;
		import browser_automation.Text;
		import browser_automation.ComparableElt;
		import browser_automation.SimpleOp;
		import browser_automation.Tag;
		import browser_automation.Element;
		import browser_automation.FindIf;
		import browser_automation.AddCondition;
		import browser_automation.Condition;
		import browser_automation.DoLoop;
		import browser_automation.WhileLoop;
		import browser_automation.ForLoop;
		import browser_automation.Loop;
		import browser_automation.Function;
		import browser_automation.CallFunction;
		import browser_automation.Store;
		import browser_automation.If;
		import browser_automation.Apply_All;
		import browser_automation.Verify;
		import browser_automation.Select;
		import browser_automation.Fill;
		import browser_automation.Go;
		import browser_automation.Click;
		import browser_automation.Action;
		import browser_automation.Operation;
		import browser_automation.Browser_Task;

		public class TestInternal {
			public static void main(String[] args) {
		
				System.out.println("Start building the program");
				buildProgram();
				System.out.println("Finish building the program");
			}
			
			«p.genCore»	
		}
	'''
	
	def genCore (Program p) '''
			private static  Program buildProgram() {
			//creating a Program
			Program program = new Program();
			//creating functions
			«FOR e : p.func»
			Function func«p.func.indexOf(e)» = new Function();
			func«p.func.indexOf(e)».setName("«e.name»");
			func«p.func.indexOf(e)».setVars(«e.vars»);
			func«p.func.indexOf(e)».setOperations(«e.operations»);
			program.addFunction(func«p.func.indexOf(e)»);
            «ENDFOR»
            BrowserTask browser_task = new BrowserTask();
			browser_task.setName("«p.b.name»");
            «FOR e : p.b.operations»
            	«IF e instanceof Action»
            		//Action action«p.b.operations.indexOf(e)» = new Action();
            		«e.genCore»
            	«ENDIF»
            	«IF e instanceof Loop»
            		//Loop loop«p.b.operations.indexOf(e)» = new Loop();
            		«e.genCore»
            	«ENDIF»
            	«IF e instanceof Apply_All»
            	     //Apply_All applyall«p.b.operations.indexOf(e)» = new Apply_All();
            	«ENDIF»
            	«IF e instanceof If»
            	     //If if«p.b.operations.indexOf(e)» = new If();
            	«ENDIF»
            	«IF e instanceof Store»
            	     //Store store«p.b.operations.indexOf(e)» = new Store();
            	«ENDIF»
            	«IF e instanceof CallFunction»
            	     //CallFunction callfunc«p.b.operations.indexOf(e)» = new CallFunction();
            	«ENDIF»
            «ENDFOR»
			program.addProgram(browser_task);
			System.out.println(program);
			return program;
			}
	'''
	
	def genCore (Action a) '''
		«IF a instanceof Click»
			Click click = new Click();
			«a.elt.genCore»
			click.setElt(«a.elt»);
        «ENDIF»
        «IF a instanceof Go»
			Go go = new Go();
			go.setLink(«a.link»);
        «ENDIF»
        «IF a instanceof Fill»
			Fill fill = new Fill();
			fill.setElt(«a.elt»);
			fill.setFillwith(«a.fillwith»);
        «ENDIF»
        «IF a instanceof Select»
			Select select = new Select();
			select.setElt(«a.elt»);
        «ENDIF»
        «IF a instanceof FindIf»
			FindIf findif = new FindIf();
			findif.setElt(«a.elt»);
			findif.setText(«a.text»);
        «ENDIF»
        «IF a instanceof Verify»
			FindIf findif = new FindIf();
			findif.setElt(«a.elt»);
			findif.setHtml_func(«a.html_func»);
        «ENDIF»

	'''

	def genCore (Loop a) '''

	
	'''
	
	def genCore (Element e) '''
		Element elt = new Element();
		«IF e == "URL"»
			elt.setType("URL");
        «ENDIF»
		«IF e instanceof Tag»
			elt.setType("Tag");
        «ENDIF»	
        «IF e instanceof Variable»
        «ENDIF»
	'''
	
}
